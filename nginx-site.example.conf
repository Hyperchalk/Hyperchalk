##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name your.site; # TODO: change this to your domain

  # TODO: change this to your cert directory
  ssl_certificate /etc/letsencrypt/live/your.site/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/your.site/privkey.pem; # managed by Certbot

  # this way, images with up to about 4MB can be sent
  client_max_body_size 6M;

  # SSL configuration
  #
  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782

  location /static/ {
    # TODO: change this to your static file directory
    alias /srv/static/;
  }

  location /media/ {
    # TODO: change this to your static file directory
    alias /srv/media/;
    auth_request /is-staff/;
    auth_request_set $auth_status $upstream_status;
    error_page 403 = @error403;
  }

  location @error403 {
    return 302 /admin/login/?next=$request_uri;
  }

  location / {
    # TODO: change the port if you use a different one
    proxy_pass http://localhost:8000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Nginx-Proxy true;
    proxy_redirect off;
  }

  # protect directories and files from unwanted exposure
  location ~ /\.(?!well-known).* {
    return 404;
  }

  # Don't allow direct access to various internal files. See MDL-69333
  location ~ (/.git/|/vendor/|/node_modules/|composer\.json|/readme|/README|readme\.txt|/upgrade\.txt|db/install\.xml|/fixtures/|/behat/|phpunit\.xml|\.lock|environment\.xml) {
    deny all;
    return 404;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  location ~ /\.ht {
    deny all;
  }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
server {
  listen 80;
  listen [::]:80;

  server_name your.site; # TODO: change this to your domain

  # redirect to https
  location / {
    return 301 https://$host$uri;
  }

  # automatic let's encrypt renewal
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/html;
    allow all;
    default_type "text/plain";
  }

  location = /.well-known/acme-challenge/ {
    return 404;
  }
}
